{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irenv\\\\Desktop\\\\Web2-Front\\\\src\\\\components\\\\Mapa.js\",\n  _s = $RefreshSig$();\nimport { Icon } from \"leaflet\";\nimport React, { useState, useEffect } from \"react\";\nimport otkaceno from \"../images/correct.png\";\nimport mapa from \"../mapa.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"../services/MapaService\";\nimport jwtDecode from \"jwt-decode\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mapa = () => {\n  _s();\n  const [porudzbine, setPorudzbine] = useState([]);\n  const [final, setFinal] = useState([]);\n  const [selectedPorudzbinaId, setSelectedPorudzbinaId] = useState(null);\n  const [isporuceno, setIsIsporuceno] = useState(false);\n  const customIcon = new Icon({\n    iconUrl: require(\"../images/marker-icon.png\"),\n    iconSize: [38, 38]\n  });\n  useEffect(() => {\n    var token = localStorage.getItem(\"token\");\n    const decodedToken = jwtDecode(token);\n    fetch(`https://localhost:44388/Porudzbina/allPorudzbineProdavcaNove?korisnikId=${decodedToken[\"Id\"]}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      mode: \"cors\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setPorudzbine(data.filter(porudzbina => porudzbina.isporucena === false));\n      const promises = porudzbine.map(async porudzbina => {\n        try {\n          // Geokodiranje adreseDostave preko Nominatim servisa\n          const nominatimUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(porudzbina.adresaDostave + \", Novi Sad, Srbija\")}`;\n          const response = await fetch(nominatimUrl);\n          const geocodeData = await response.json();\n          if (geocodeData.length > 0) {\n            const {\n              lat,\n              lon\n            } = geocodeData[0];\n            // Dodajte latitude i longitude u porudžbinu\n            porudzbina.geocode = [parseFloat(lat), parseFloat(lon)];\n          }\n        } catch (error) {\n          console.error(\"Greška prilikom geokodiranja adrese:\", error);\n        }\n        return porudzbina;\n      });\n      Promise.all(promises).then(porudzbineWithGeocode => {\n        setFinal(porudzbineWithGeocode);\n      }).catch(error => {\n        console.error(\"Greška prilikom dobavljanja geokodiranih podataka:\", error);\n      });\n    }).catch(error => {\n      console.error(\"Greška prilikom dobavljanja podataka sa servera:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    var token = localStorage.getItem(\"token\");\n    const decodedToken = jwtDecode(token);\n    if (selectedPorudzbinaId !== null) {\n      // Izgradite URL sa ID-om selektovane porudžbine\n      const requestUrl = `https://localhost:44388/Porudzbina/isporuciPorudzbinu?porudzbinaId=${selectedPorudzbinaId}`;\n\n      // Sada možete izvršiti zahtev na bekend koristeći fetch ili axios ili drugi biblioteke\n      // Na primer:\n      fetch(requestUrl, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        mode: \"cors\"\n      }).then(response => {\n        // Obradite odgovor od bekenda ovde\n        setIsIsporuceno(true);\n      }).catch(error => {\n        console.error(\"Greška prilikom slanja zahteva na bekend:\", error);\n      });\n\n      // Resetujte selectedPorudzbinaId nakon što ste završili slanje zahteva\n      setSelectedPorudzbinaId(null);\n    }\n  }, [selectedPorudzbinaId]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [45.267136, 19.833549],\n    zoom: 13,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), final.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      position: marker.geocode,\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: marker.naziv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), isporuceno ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: otkaceno,\n          className: \"manja-ikona\",\n          alt: \"Isporuceno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedPorudzbinaId(marker.id),\n          children: \"Posalji porudzbinu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, marker.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Mapa, \"1aJjEEwI4zX/Rk8OcQDuFHyp508=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["Icon","React","useState","useEffect","otkaceno","mapa","jwtDecode","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","Mapa","_s","porudzbine","setPorudzbine","final","setFinal","selectedPorudzbinaId","setSelectedPorudzbinaId","isporuceno","setIsIsporuceno","customIcon","iconUrl","require","iconSize","token","localStorage","getItem","decodedToken","fetch","method","headers","Authorization","mode","then","response","json","data","console","log","filter","porudzbina","isporucena","promises","map","nominatimUrl","encodeURIComponent","adresaDostave","geocodeData","length","lat","lon","geocode","parseFloat","error","Promise","all","porudzbineWithGeocode","catch","requestUrl","center","zoom","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","marker","position","icon","naziv","src","className","alt","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/irenv/Desktop/Web2-Front/src/components/Mapa.js"],"sourcesContent":["import { Icon } from \"leaflet\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport otkaceno from \"../images/correct.png\";\r\nimport mapa from \"../mapa.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../services/MapaService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nconst Mapa = () => {\r\n  const [porudzbine, setPorudzbine] = useState([]);\r\n  const [final, setFinal] = useState([]);\r\n  const [selectedPorudzbinaId, setSelectedPorudzbinaId] = useState(null);\r\n  const [isporuceno, setIsIsporuceno] = useState(false);\r\n\r\n  const customIcon = new Icon({\r\n    iconUrl: require(\"../images/marker-icon.png\"),\r\n    iconSize: [38, 38],\r\n  });\r\n\r\n  useEffect(() => {\r\n    var token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n\r\n    fetch(\r\n      `https://localhost:44388/Porudzbina/allPorudzbineProdavcaNove?korisnikId=${decodedToken[\"Id\"]}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        mode: \"cors\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setPorudzbine(\r\n          data.filter((porudzbina) => porudzbina.isporucena === false)\r\n        );\r\n\r\n        const promises = porudzbine.map(async (porudzbina) => {\r\n          try {\r\n            // Geokodiranje adreseDostave preko Nominatim servisa\r\n            const nominatimUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\r\n              porudzbina.adresaDostave + \", Novi Sad, Srbija\"\r\n            )}`;\r\n            const response = await fetch(nominatimUrl);\r\n            const geocodeData = await response.json();\r\n\r\n            if (geocodeData.length > 0) {\r\n              const { lat, lon } = geocodeData[0];\r\n              // Dodajte latitude i longitude u porudžbinu\r\n              porudzbina.geocode = [parseFloat(lat), parseFloat(lon)];\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Greška prilikom geokodiranja adrese:\", error);\r\n          }\r\n          return porudzbina;\r\n        });\r\n\r\n        Promise.all(promises)\r\n          .then((porudzbineWithGeocode) => {\r\n            setFinal(porudzbineWithGeocode);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\r\n              \"Greška prilikom dobavljanja geokodiranih podataka:\",\r\n              error\r\n            );\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\r\n          \"Greška prilikom dobavljanja podataka sa servera:\",\r\n          error\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    var token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n    if (selectedPorudzbinaId !== null) {\r\n      // Izgradite URL sa ID-om selektovane porudžbine\r\n      const requestUrl = `https://localhost:44388/Porudzbina/isporuciPorudzbinu?porudzbinaId=${selectedPorudzbinaId}`;\r\n\r\n      // Sada možete izvršiti zahtev na bekend koristeći fetch ili axios ili drugi biblioteke\r\n      // Na primer:\r\n      fetch(requestUrl, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        mode: \"cors\",\r\n      })\r\n        .then((response) => {\r\n          // Obradite odgovor od bekenda ovde\r\n          setIsIsporuceno(true);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Greška prilikom slanja zahteva na bekend:\", error);\r\n        });\r\n\r\n      // Resetujte selectedPorudzbinaId nakon što ste završili slanje zahteva\r\n      setSelectedPorudzbinaId(null);\r\n    }\r\n  }, [selectedPorudzbinaId]);\r\n\r\n  return (\r\n    <MapContainer center={[45.267136, 19.833549]} zoom={13}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      {final.map((marker) => (\r\n        <Marker key={marker.id} position={marker.geocode} icon={customIcon}>\r\n          <Popup>\r\n            <p>{marker.naziv}</p>\r\n            {isporuceno ? (\r\n              <img src={otkaceno} className=\"manja-ikona\" alt=\"Isporuceno\" />\r\n            ) : (\r\n              <button onClick={() => setSelectedPorudzbinaId(marker.id)}>\r\n                Posalji porudzbinu\r\n              </button>\r\n            )}\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Mapa;\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,SAAS;AAC9B,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAO,0BAA0B;AACjC,OAAO,yBAAyB;AAChC,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACmB,UAAU,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMqB,UAAU,GAAG,IAAIvB,IAAI,CAAC;IAC1BwB,OAAO,EAAEC,OAAO,CAAC,2BAA2B,CAAC;IAC7CC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;EACnB,CAAC,CAAC;EAEFvB,SAAS,CAAC,MAAM;IACd,IAAIwB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzC,MAAMC,YAAY,GAAGxB,SAAS,CAACqB,KAAK,CAAC;IAErCI,KAAK,CACF,2EAA0ED,YAAY,CAAC,IAAI,CAAE,EAAC,EAC/F;MACEE,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASP,KAAM;MACjC,CAAC;MACDQ,IAAI,EAAE;IACR,CACF,CAAC,CACEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBvB,aAAa,CACXuB,IAAI,CAACG,MAAM,CAAEC,UAAU,IAAKA,UAAU,CAACC,UAAU,KAAK,KAAK,CAC7D,CAAC;MAED,MAAMC,QAAQ,GAAG9B,UAAU,CAAC+B,GAAG,CAAC,MAAOH,UAAU,IAAK;QACpD,IAAI;UACF;UACA,MAAMI,YAAY,GAAI,4DAA2DC,kBAAkB,CACjGL,UAAU,CAACM,aAAa,GAAG,oBAC7B,CAAE,EAAC;UACH,MAAMZ,QAAQ,GAAG,MAAMN,KAAK,CAACgB,YAAY,CAAC;UAC1C,MAAMG,WAAW,GAAG,MAAMb,QAAQ,CAACC,IAAI,CAAC,CAAC;UAEzC,IAAIY,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;YAC1B,MAAM;cAAEC,GAAG;cAAEC;YAAI,CAAC,GAAGH,WAAW,CAAC,CAAC,CAAC;YACnC;YACAP,UAAU,CAACW,OAAO,GAAG,CAACC,UAAU,CAACH,GAAG,CAAC,EAAEG,UAAU,CAACF,GAAG,CAAC,CAAC;UACzD;QACF,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdhB,OAAO,CAACgB,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC9D;QACA,OAAOb,UAAU;MACnB,CAAC,CAAC;MAEFc,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC,CAClBT,IAAI,CAAEuB,qBAAqB,IAAK;QAC/BzC,QAAQ,CAACyC,qBAAqB,CAAC;MACjC,CAAC,CAAC,CACDC,KAAK,CAAEJ,KAAK,IAAK;QAChBhB,OAAO,CAACgB,KAAK,CACX,oDAAoD,EACpDA,KACF,CAAC;MACH,CAAC,CAAC;IACN,CAAC,CAAC,CACDI,KAAK,CAAEJ,KAAK,IAAK;MAChBhB,OAAO,CAACgB,KAAK,CACX,kDAAkD,EAClDA,KACF,CAAC;IACH,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENrD,SAAS,CAAC,MAAM;IACd,IAAIwB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzC,MAAMC,YAAY,GAAGxB,SAAS,CAACqB,KAAK,CAAC;IACrC,IAAIR,oBAAoB,KAAK,IAAI,EAAE;MACjC;MACA,MAAM0C,UAAU,GAAI,sEAAqE1C,oBAAqB,EAAC;;MAE/G;MACA;MACAY,KAAK,CAAC8B,UAAU,EAAE;QAChB7B,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASP,KAAM;QACjC,CAAC;QACDQ,IAAI,EAAE;MACR,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACAf,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC,CACDsC,KAAK,CAAEJ,KAAK,IAAK;QAChBhB,OAAO,CAACgB,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE,CAAC,CAAC;;MAEJ;MACApC,uBAAuB,CAAC,IAAI,CAAC;IAC/B;EACF,CAAC,EAAE,CAACD,oBAAoB,CAAC,CAAC;EAE1B,oBACEP,OAAA,CAACL,YAAY;IAACuD,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAE;IAACC,IAAI,EAAE,EAAG;IAAAC,QAAA,gBACrDpD,OAAA,CAACJ,SAAS;MACRyD,WAAW,EAAC,yFAAyF;MACrGC,GAAG,EAAC;IAAgD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,EAEDrD,KAAK,CAAC6B,GAAG,CAAEyB,MAAM,iBAChB3D,OAAA,CAACH,MAAM;MAAiB+D,QAAQ,EAAED,MAAM,CAACjB,OAAQ;MAACmB,IAAI,EAAElD,UAAW;MAAAyC,QAAA,eACjEpD,OAAA,CAACF,KAAK;QAAAsD,QAAA,gBACJpD,OAAA;UAAAoD,QAAA,EAAIO,MAAM,CAACG;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpBjD,UAAU,gBACTT,OAAA;UAAK+D,GAAG,EAAEvE,QAAS;UAACwE,SAAS,EAAC,aAAa;UAACC,GAAG,EAAC;QAAY;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE/D1D,OAAA;UAAQkE,OAAO,EAAEA,CAAA,KAAM1D,uBAAuB,CAACmD,MAAM,CAACQ,EAAE,CAAE;UAAAf,QAAA,EAAC;QAE3D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC,GAVGC,MAAM,CAACQ,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWd,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACxD,EAAA,CA7HID,IAAI;AAAAmE,EAAA,GAAJnE,IAAI;AA+HV,eAAeA,IAAI;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}