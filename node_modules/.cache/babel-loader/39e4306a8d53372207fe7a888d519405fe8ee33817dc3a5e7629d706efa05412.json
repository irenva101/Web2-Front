{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irenv\\\\Desktop\\\\Web2-Front\\\\src\\\\components\\\\Mapa.js\",\n  _s = $RefreshSig$();\nimport { Icon } from \"leaflet\";\nimport React, { useState, useEffect } from \"react\";\nimport mapa from \"../mapa.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"../services/MapaService\";\nimport jwtDecode from \"jwt-decode\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mapa = () => {\n  _s();\n  const [porudzbine, setPorudzbine] = useState([]);\n  const [porudzbineDisplay, setPorudzbineDisplay] = useState([]);\n  const [final, setFinal] = useState([]);\n  const markers = [];\n  const customIcon = new Icon({\n    iconUrl: require(\"../images/marker-icon.png\"),\n    iconSize: [38, 38]\n  });\n  function getLatLongForAddress(address) {\n    //Danila Kiša 36, Novi Sad, Srbija\n    const nominatimUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;\n    try {\n      const response = fetch(nominatimUrl);\n      const data = response.json();\n      if (data && data.length > 0) {\n        const firstResult = data[0];\n        const latitude = parseFloat(firstResult.lat);\n        const longitude = parseFloat(firstResult.lon);\n        console.log(\"STIGLI SMO OVDE!\");\n        return {\n          latitude,\n          longitude\n        };\n      } else {\n        console.error(\"Adresa nije pronađena.\");\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Greška prilikom dohvatanja podataka:\", error);\n      return null;\n    }\n  }\n  useEffect(() => {\n    var token = localStorage.getItem(\"token\");\n    const decodedToken = jwtDecode(token);\n    fetch(`https://localhost:44388/Porudzbina/allPorudzbineProdavcaNove?korisnikId=${decodedToken[\"Id\"]}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      mode: \"cors\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setPorudzbine(data);\n    }).catch(error => {\n      console.error(\"Greška prilikom dobavljanja podataka sa servera:\", error);\n    });\n    let filtriranePorudzbine = porudzbine.map(function (porudzbina) {\n      return {\n        id: porudzbina.id,\n        adresaDostave: porudzbina.adresaDostave\n      };\n    });\n    let porudzbineDisplay = [];\n    console.log(filtriranePorudzbine);\n    for (const porudzbina of filtriranePorudzbine) {\n      const {\n        id,\n        adresaDostave\n      } = porudzbina;\n      const latLong = getLatLongForAddress(adresaDostave + \", Novi Sad, Srbija\");\n      console.log(latLong);\n      if (latLong) {\n        porudzbineDisplay.push({\n          id: id,\n          latitude: latLong.latitude,\n          longitude: latLong.longitude\n        });\n      }\n    }\n    console.log(\"Porudžbine sa dodatnim informacijama:\" + JSON.stringify(porudzbineDisplay));\n    //setPorudzbineDisplay(porudzbineDisplay);\n\n    let temp = porudzbineDisplay.map(function (porudzbina) {\n      return {\n        id: porudzbina.id,\n        geocode: [porudzbina.latitude, porudzbina.longitude]\n      };\n    });\n    console.log(JSON.stringify(temp));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [45.267136, 19.833549],\n    zoom: 13,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), final.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      position: marker.geocode,\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Posalji porudzbinu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, marker.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Mapa, \"MKcg6PbsMcH7Tel2OUg/zSlXGEc=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["Icon","React","useState","useEffect","mapa","jwtDecode","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","Mapa","_s","porudzbine","setPorudzbine","porudzbineDisplay","setPorudzbineDisplay","final","setFinal","markers","customIcon","iconUrl","require","iconSize","getLatLongForAddress","address","nominatimUrl","encodeURIComponent","response","fetch","data","json","length","firstResult","latitude","parseFloat","lat","longitude","lon","console","log","error","token","localStorage","getItem","decodedToken","method","headers","Authorization","mode","then","catch","filtriranePorudzbine","map","porudzbina","id","adresaDostave","latLong","push","JSON","stringify","temp","geocode","center","zoom","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","marker","position","icon","_c","$RefreshReg$"],"sources":["C:/Users/irenv/Desktop/Web2-Front/src/components/Mapa.js"],"sourcesContent":["import { Icon } from \"leaflet\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport mapa from \"../mapa.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../services/MapaService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nconst Mapa = () => {\r\n  const [porudzbine, setPorudzbine] = useState([]);\r\n  const [porudzbineDisplay, setPorudzbineDisplay] = useState([]);\r\n  const [final, setFinal] = useState([]);\r\n  const markers = [];\r\n  const customIcon = new Icon({\r\n    iconUrl: require(\"../images/marker-icon.png\"),\r\n    iconSize: [38, 38],\r\n  });\r\n\r\n  function getLatLongForAddress(address) { //Danila Kiša 36, Novi Sad, Srbija\r\n    const nominatimUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\r\n      address\r\n    )}`;\r\n\r\n    try {\r\n      const response = fetch(nominatimUrl);\r\n      const data = response.json();\r\n  \r\n      if (data && data.length > 0) {\r\n        const firstResult = data[0];\r\n        const latitude = parseFloat(firstResult.lat);\r\n        const longitude = parseFloat(firstResult.lon);\r\n        console.log(\"STIGLI SMO OVDE!\");\r\n        return { latitude, longitude };\r\n      } else {\r\n        console.error(\"Adresa nije pronađena.\");\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvatanja podataka:\", error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    var token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n\r\n    fetch(\r\n      `https://localhost:44388/Porudzbina/allPorudzbineProdavcaNove?korisnikId=${decodedToken[\"Id\"]}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        mode: \"cors\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setPorudzbine(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\r\n          \"Greška prilikom dobavljanja podataka sa servera:\",\r\n          error\r\n        );\r\n      });\r\n\r\n    let filtriranePorudzbine = porudzbine.map(function(porudzbina) {\r\n      return {\r\n        id: porudzbina.id,\r\n        adresaDostave: porudzbina.adresaDostave,\r\n      };\r\n    });\r\n    let porudzbineDisplay = [];\r\n    console.log(filtriranePorudzbine);\r\n\r\n    for (const porudzbina of filtriranePorudzbine) {\r\n      const { id, adresaDostave } = porudzbina;\r\n      const latLong = getLatLongForAddress(adresaDostave + \", Novi Sad, Srbija\");\r\n      console.log(latLong);\r\n  \r\n      if (latLong) {\r\n        porudzbineDisplay.push({\r\n          id: id,\r\n          latitude: latLong.latitude,\r\n          longitude: latLong.longitude,\r\n        });\r\n      }\r\n    }\r\n    console.log(\"Porudžbine sa dodatnim informacijama:\"+ JSON.stringify(porudzbineDisplay));\r\n    //setPorudzbineDisplay(porudzbineDisplay);\r\n\r\n    let temp = porudzbineDisplay.map(function (porudzbina) {\r\n      return {\r\n        id: porudzbina.id,\r\n        geocode: [porudzbina.latitude, porudzbina.longitude],\r\n      };\r\n    });\r\n\r\n    \r\n\r\n    console.log(JSON.stringify(temp));\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer center={[45.267136, 19.833549]} zoom={13}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      {final.map((marker) => (\r\n        <Marker key={marker.id} position={marker.geocode} icon={customIcon}>\r\n          <Popup>\r\n            <p></p>\r\n            <button>Posalji porudzbinu</button>\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Mapa;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}