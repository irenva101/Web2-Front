{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irenv\\\\Desktop\\\\Web2-Front\\\\src\\\\components\\\\PregledArtikala.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport DetaljiArtikla from \"./DetaljiArtikla\";\nimport chartSlika from \"../images/chart.png\";\nimport Korpa from \"./Korpa\";\nimport jwtDecode from \"jwt-decode\";\nimport \"../../src/Artikli.css\";\nimport PayPalCheckoutButton from \"./PaypalCheckoutButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PregledArtikala = () => {\n  _s();\n  const [artikli, setArtikli] = useState([]);\n  const [selectedArtikal, setSelectedArtikal] = useState(null);\n  const [adresa, setAdresa] = useState(\"\");\n  const [komentar, setKomentar] = useState(\"\");\n  const [cartItems, setCartItems] = useState([]);\n  // Globalna promenljiva za ID-jeve artikala\n  const [selectedArtikliIds, setSelectedArtikliIds] = useState([]);\n  const [kolicina, setKolicina] = useState(\"\");\n  const [isPaid, setIsPaid] = useState(false);\n  const [payPal, setPayPal] = useState(false);\n  const [orderId, setOrderId] = useState(null);\n  const [ukupanIznos, setUkupanIznos] = useState(0);\n  const [temp, setTemp] = useState(0);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortOption, setSortOption] = useState(\"naziv\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [korpa, setKorpa] = useState(0);\n  const [showPregledPorudzbine, setShowPregledPorudzbine] = useState(false);\n  const odabraniArtikli = cartItems.filter(item => item.kolicina > 0);\n  const [prodavci, setProdavci] = useState(\"\");\n  //const [ukupanIznosSaPostarinom, setUkupanIznosSaPostarinom] = useState(0);\n\n  const formatiranoVremeIsporuke = vremePorucivanja => {\n    console.log(\"VREME PORUCIVANJA: \" + vremePorucivanja);\n    if (vremePorucivanja) {\n      const minutiZaDodati = Math.floor(Math.random() * 100) + 60;\n      //console.log(\"Minuti za dodati: \"+minutiZaDodati);\n      const novoVreme = new Date(vremePorucivanja);\n      novoVreme.setMinutes(vremePorucivanja.getMinutes() + minutiZaDodati);\n      console.log(\"VREME ISPORUKE: \" + novoVreme);\n      return novoVreme;\n    } else {\n      return alert(\"VREME PORUCIVANJA NULL\");\n    }\n  };\n  const posaljiPorudzbinuNaServer = () => {\n    // Prvo kreiramo objekat koji sadrži sve potrebne informacije za porudžbinu\n\n    console.log(\"Cart items: \" + JSON.stringify(cartItems));\n    const newSelectedArtikliIds = [];\n    cartItems.forEach(item => {\n      for (let i = 0; i < item.kolicina; i++) {\n        newSelectedArtikliIds.push(item.artikal.id);\n      }\n    });\n    setSelectedArtikliIds(newSelectedArtikliIds);\n    console.log(newSelectedArtikliIds);\n    console.log(artikli);\n    const zaSlanje = newSelectedArtikliIds.reduce((selectedArtikli, artikalId) => {\n      const artikal = artikli.find(artikal => artikal.id === artikalId);\n      if (artikal) {\n        selectedArtikli.push(artikal);\n      }\n      return selectedArtikli;\n    }, []);\n    console.log(JSON.stringify(zaSlanje) + \"+++++++++++++++++++++++++++++++\");\n    var token = localStorage.getItem(\"token\");\n    const decodedToken = jwtDecode(token);\n    console.log(decodedToken[\"Id\"]);\n    if (!token) {\n      console.error(\"Token nije prisutan u localStorage-u.\");\n      return; // Ovde možete izvršiti odgovarajuće akcije ukoliko token nije prisutan.\n    }\n\n    // Pretpostavićemo da se JWT token sastoji iz tri dela (header, payload, signature) razdvojenih tačkom.\n    var tokenParts = token.split(\".\");\n    if (tokenParts.length !== 3) {\n      console.error(\"Neispravan format tokena.\");\n      return; // Ovde možete izvršiti odgovarajuće akcije ukoliko format nije ispravan.\n    }\n\n    const vremePorucivanja = new Date();\n    const vremeIsporuke = formatiranoVremeIsporuke(vremePorucivanja);\n    console.log(\"-----------------VREME PORUCIVANJA: \" + vremePorucivanja);\n    console.log(\"-----------------VREME ISPORUKE :\" + vremeIsporuke);\n    if (orderId != null) {\n      console.log(\"JESMO LI DOBACILI OVDE?\");\n      setIsPaid(true);\n      setPayPal(true);\n    }\n    const porudzbina = {\n      artikli: zaSlanje,\n      ukupanIznos: ukupanIznos,\n      adresaDostave: adresa,\n      komentar: komentar,\n      korisnikId: decodedToken[\"Id\"],\n      vremePorucivanja: vremePorucivanja,\n      vremeIsporuke: vremeIsporuke,\n      otkazana: false,\n      isPaid: orderId != null ? true : false,\n      // Dodaj isPaid u porudžbinu\n      payPal: orderId != null ? true : false,\n      // Dodaj payPal u porudžbinu\n      orderId: orderId || \"0\"\n    };\n    console.log(JSON.stringify(porudzbina));\n    fetch(\"https://localhost:44388/Porudzbina\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(porudzbina),\n      mode: \"cors\"\n    }).then(response => response.json()).then(data => {\n      // uspesno poslato serveru\n      console.log(\"Sta saljem:\");\n      console.log(data);\n      alert(\"Porudžbina je uspešno poslata!\");\n      setCartItems([]); // Resetujemo korpu nakon što je porudžbina poslata\n      setUkupanIznos(0); // Resetujemo ukupan iznos nakon što je porudžbina poslata\n      setAdresa(\"\"); // Resetujemo polje za adresu nakon što je porudžbina poslata\n      setKomentar(\"\"); // Resetujemo polje za komentar nakon što je porudžbina poslata\n    }).catch(error => {\n      //greska prilikom slanja na server\n      console.error(\"Greška prilikom slanja porudžbine:\", error);\n      alert(\"Došlo je do greške prilikom slanja porudžbine.\");\n    });\n\n    // Zatim koristimo fetch funkciju za slanje POST zahteva na server\n    setTimeout(() => {\n      fetch(\"https://localhost:44388/Artikal/UpdateKolicinu\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n          //Authorization: `Bearer ${token}`,\n        },\n\n        body: JSON.stringify(zaSlanje),\n        mode: \"cors\"\n      }).then(response => response.json()).then(data => {\n        // uspesno poslato serveru\n        console.log(\"Artikli koje saljem za smanjenje kolicine:\");\n        alert(\"Uspesno je smanjena kolicina artikala.\");\n      }).catch(error => {\n        //greska prilikom slanja na server\n        console.error(\"Greška prilikom smanjenja kolicine:\", error);\n      });\n    }, 2000);\n    //nakon sto sam poslala porudzbinu da smanjim broj artikala\n  };\n\n  const handlePayPalClick = () => {\n    setIsPaid(true);\n    setPayPal(true);\n    console.log(\"JEsmo li upali u ovaj gde gde smo postavili sat paid true i setpaypal true.\");\n  };\n  useEffect(() => {\n    var token = localStorage.getItem(\"token\");\n    const decodedToken = jwtDecode(token);\n    //console.log(decodedToken[\"Id\"]);\n\n    fetch(\"https://localhost:44388/Artikal\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      mode: \"cors\"\n    }).then(responce => responce.json()).then(data => {\n      //obrada odgovora servera\n      console.log(data); //ovde dobijem prodavac Id\n      setArtikli(data);\n    }).catch(error => {\n      //obrada greske\n      console.error(\"Greška prilikom dobavljanja podataka sa servera:\", error);\n    });\n\n    //fetch sa dobavljanje svih prodavaca(da bi preko idProdavca dobili postarinu)\n    fetch(\"https://localhost:44388/Prodavac/allProdavci\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        //Authorization: `Bearer ${token}`,\n      },\n\n      mode: \"cors\"\n    }).then(response => response.json()).then(data => {\n      console.log(\"(GET) Svi prodavci:\");\n      console.log(data);\n      setProdavci(data);\n    }).catch(error => {\n      console.error(\"Greška prilikom dobavljanja prodavaca:\", error);\n      alert(\"Došlo je do greške prilikom dobavljanja prodavaca.\");\n    });\n  }, []); //prazan dependency niz što znači da će se izvršiti samo prilikom prvog renderovanja komponente.\n\n  useEffect(() => {\n    if (cartItems.length === 0) {\n      setShowPregledPorudzbine(false);\n    } else {\n      ukupnaPostarina(cartItems);\n    }\n  }, [cartItems]);\n  const filteredArtikli = artikli.filter(artikal => {\n    return artikal.naziv.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  const dodajUKorpu = artikal => {\n    const existingItem = cartItems.find(item => item.artikal.id === artikal.id);\n    //console.log(\"*******\" + artikal.id + \"**************\");\n    if (existingItem) {\n      if (existingItem.kolicina >= artikal.kolicina) {\n        alert(\"Dostignuta je maksimalna količina za ovaj artikal.\");\n        return;\n      }\n      setCartItems(cartItems.map(item => item.artikal.id === artikal.id ? {\n        ...item,\n        kolicina: item.kolicina + 1\n      } : item));\n    } else {\n      setCartItems([...cartItems, {\n        artikal,\n        kolicina: 1,\n        cena: 0\n      }]);\n    }\n    setUkupanIznos(ukupanIznos + artikal.cena);\n  };\n  const obrisiIzKorpe = artikal => {\n    const existingItem = cartItems.find(item => item.artikal.id === artikal.id);\n    if (existingItem) {\n      if (existingItem.kolicina === 1) {\n        setCartItems(cartItems.filter(item => item.artikal.id !== artikal.id));\n      } else {\n        setCartItems(cartItems.map(item => item.artikal.id === artikal.id ? {\n          ...item,\n          kolicina: item.kolicina - 1\n        } : item));\n      }\n      setUkupanIznos(ukupanIznos - artikal.cena);\n    }\n  };\n  const handlePoruci = () => {\n    // Ovde možete implementirati logiku za slanje porudžbine na server, resetovanje korpe, ili nešto drugo što želite\n    alert(\"Porudžbina je uspešno poslata!\");\n    setIsPaid(false);\n    setPayPal(false);\n    setCartItems([]);\n    setUkupanIznos(0);\n  };\n  const sortedArtikli = [...filteredArtikli]; // Kreiramo kopiju niza kako bismo sačuvali originalni niz nepromenjen\n\n  if (sortOption === \"naziv\") {\n    // Sortiranje po nazivu (abecedno)\n    sortedArtikli.sort((a, b) => a.naziv.localeCompare(b.naziv));\n  } else if (sortOption === \"cena\") {\n    // Sortiranje po ceni\n    sortedArtikli.sort((a, b) => {\n      if (sortOrder === \"asc\") {\n        return a.cena - b.cena; // Sortiranje od najjeftinijeg do najskupljeg\n      } else {\n        return b.cena - a.cena; // Sortiranje od najskupljeg do najjeftinijeg\n      }\n    });\n  }\n\n  const ukupnaPostarina = cartItems => {\n    console.log(cartItems);\n    //provera ako ima dva artikla od istog Pordavca\n    const listaIdjevaProdavaca = [];\n    cartItems.forEach(item => {\n      const idProdavca = item.artikal[\"prodavacID\"];\n      if (!listaIdjevaProdavaca.includes(idProdavca)) {\n        listaIdjevaProdavaca.push(idProdavca);\n      }\n    });\n    let ukupnaPostarina = 0;\n    const filtriraniProdavci = prodavci.filter(prodavac => listaIdjevaProdavaca.includes(prodavac.id));\n    filtriraniProdavci.forEach(prodavac => {\n      ukupnaPostarina += prodavac.postarina;\n    });\n    setTemp(ukupnaPostarina);\n  };\n  const [hoveredArtikal, setHoveredArtikal] = useState(null);\n  const product = {\n    description: \"nesto\",\n    price: 19\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-icon\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: chartSlika,\n        alt: \"Korpa\",\n        className: \"cart-icon-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cart-count\",\n        children: korpa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Dostupni artikli\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-and-sort\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Unesite naziv artikla za pretragu\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortOption,\n        onChange: e => setSortOption(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"naziv\",\n          children: \"Sortiraj po nazivu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cena\",\n          children: \"Sortiraj po ceni\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sort-order-button\",\n        onClick: () => setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\"),\n        children: sortOrder === \"asc\" ? \"Sortiraj po ceni (rastuce)\" : \"Sortiraj po ceni (opadajuce)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"artikli-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Naziv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Slika\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Koli\\u010Dina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Cena\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedArtikli.map(artikal => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `artikal-row ${hoveredArtikal === artikal.id ? \"hovered\" : \"\"}`,\n          onMouseEnter: () => setHoveredArtikal(artikal.id),\n          onMouseLeave: () => setHoveredArtikal(null),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: artikal.naziv\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: artikal.slikaArtikla,\n              alt: artikal.naziv,\n              className: \"artikal-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `kolicina-cell ${artikal.kolicina > 0 ? \"in-stock\" : \"out-of-stock\"}`,\n            children: artikal.kolicina > 0 ? \"Na stanju\" : \"Nema na stanju\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: artikal.cena.toLocaleString(\"sr-RS\", {\n              style: \"currency\",\n              currency: \"RSD\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"detalji-button\",\n              onClick: () => {\n                setSelectedArtikal(artikal);\n              },\n              children: \"Detalji\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => dodajUKorpu(artikal),\n              children: \"Dodaj u korpu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, artikal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), selectedArtikal && /*#__PURE__*/_jsxDEV(DetaljiArtikla, {\n      artikal: selectedArtikal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-and-order\",\n      children: [/*#__PURE__*/_jsxDEV(Korpa, {\n        cartItems: cartItems,\n        obrisiIzKorpe: obrisiIzKorpe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-summary-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"order-summary-title\",\n            children: \"Iznos bez troskova dostave:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"order-summary-amount\",\n            children: ukupanIznos.toLocaleString(\"sr-RS\", {\n              style: \"currency\",\n              currency: \"RSD\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pregled-porudzbine-button\",\n            onClick: () => setShowPregledPorudzbine(true),\n            children: \"Pregled porudzbine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), showPregledPorudzbine && cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Artikli u korpi:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"order-details-list\",\n            children: cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.artikal.naziv, \" (Koli\\u010Dina: \", item.kolicina, \")\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-details-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"adresa\",\n              children: \"Adresa:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"adresa\",\n              value: adresa,\n              onChange: e => setAdresa(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-details-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"komentar\",\n              children: \"Komentar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"komentar\",\n              value: komentar,\n              onChange: e => setKomentar(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: \"#279980\"\n              },\n              children: \"Ukupan iznos(sa postarinom):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: (ukupanIznos + temp).toLocaleString(\"sr-RS\", {\n                style: \"currency\",\n                currency: \"RSD\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paypal-button-container\",\n            children: /*#__PURE__*/_jsxDEV(PayPalCheckoutButton, {\n              product: product,\n              setOrderId: setOrderId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"poruci-button\",\n            onClick: () => posaljiPorudzbinuNaServer(),\n            children: \"Poru\\u010Di\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n};\n_s(PregledArtikala, \"140cP0acCWurKzpKPhNM4ZJrOOg=\");\n_c = PregledArtikala;\nexport default PregledArtikala;\nvar _c;\n$RefreshReg$(_c, \"PregledArtikala\");","map":{"version":3,"names":["React","useEffect","useState","DetaljiArtikla","chartSlika","Korpa","jwtDecode","PayPalCheckoutButton","jsxDEV","_jsxDEV","PregledArtikala","_s","artikli","setArtikli","selectedArtikal","setSelectedArtikal","adresa","setAdresa","komentar","setKomentar","cartItems","setCartItems","selectedArtikliIds","setSelectedArtikliIds","kolicina","setKolicina","isPaid","setIsPaid","payPal","setPayPal","orderId","setOrderId","ukupanIznos","setUkupanIznos","temp","setTemp","searchTerm","setSearchTerm","sortOption","setSortOption","sortOrder","setSortOrder","korpa","setKorpa","showPregledPorudzbine","setShowPregledPorudzbine","odabraniArtikli","filter","item","prodavci","setProdavci","formatiranoVremeIsporuke","vremePorucivanja","console","log","minutiZaDodati","Math","floor","random","novoVreme","Date","setMinutes","getMinutes","alert","posaljiPorudzbinuNaServer","JSON","stringify","newSelectedArtikliIds","forEach","i","push","artikal","id","zaSlanje","reduce","selectedArtikli","artikalId","find","token","localStorage","getItem","decodedToken","error","tokenParts","split","length","vremeIsporuke","porudzbina","adresaDostave","korisnikId","otkazana","fetch","method","headers","Authorization","body","mode","then","response","json","data","catch","setTimeout","handlePayPalClick","responce","ukupnaPostarina","filteredArtikli","naziv","toLowerCase","includes","dodajUKorpu","existingItem","map","cena","obrisiIzKorpe","handlePoruci","sortedArtikli","sort","a","b","localeCompare","listaIdjevaProdavaca","idProdavca","filtriraniProdavci","prodavac","postarina","hoveredArtikal","setHoveredArtikal","product","description","price","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","onMouseEnter","onMouseLeave","slikaArtikla","toLocaleString","style","currency","index","htmlFor","color","_c","$RefreshReg$"],"sources":["C:/Users/irenv/Desktop/Web2-Front/src/components/PregledArtikala.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DetaljiArtikla from \"./DetaljiArtikla\";\r\nimport chartSlika from \"../images/chart.png\";\r\nimport Korpa from \"./Korpa\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport \"../../src/Artikli.css\";\r\nimport PayPalCheckoutButton from \"./PaypalCheckoutButton\";\r\n\r\nconst PregledArtikala = () => {\r\n  const [artikli, setArtikli] = useState([]);\r\n  const [selectedArtikal, setSelectedArtikal] = useState(null);\r\n\r\n  const [adresa, setAdresa] = useState(\"\");\r\n  const [komentar, setKomentar] = useState(\"\");\r\n  const [cartItems, setCartItems] = useState([]);\r\n  // Globalna promenljiva za ID-jeve artikala\r\n  const [selectedArtikliIds, setSelectedArtikliIds] = useState([]);\r\n  const [kolicina, setKolicina] = useState(\"\");\r\n  const [isPaid, setIsPaid] = useState(false);\r\n  const [payPal, setPayPal] = useState(false);\r\n  const [orderId, setOrderId] = useState(null);\r\n  const [ukupanIznos, setUkupanIznos] = useState(0);\r\n  const [temp, setTemp] = useState(0);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortOption, setSortOption] = useState(\"naziv\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n  const [korpa, setKorpa] = useState(0);\r\n  const [showPregledPorudzbine, setShowPregledPorudzbine] = useState(false);\r\n  const odabraniArtikli = cartItems.filter((item) => item.kolicina > 0);\r\n  const [prodavci, setProdavci] = useState(\"\");\r\n  //const [ukupanIznosSaPostarinom, setUkupanIznosSaPostarinom] = useState(0);\r\n\r\n  const formatiranoVremeIsporuke = (vremePorucivanja) => {\r\n    console.log(\"VREME PORUCIVANJA: \" + vremePorucivanja);\r\n    if (vremePorucivanja) {\r\n      const minutiZaDodati = Math.floor(Math.random() * 100) + 60;\r\n      //console.log(\"Minuti za dodati: \"+minutiZaDodati);\r\n      const novoVreme = new Date(vremePorucivanja);\r\n      novoVreme.setMinutes(vremePorucivanja.getMinutes() + minutiZaDodati);\r\n      console.log(\"VREME ISPORUKE: \" + novoVreme);\r\n      return novoVreme;\r\n    } else {\r\n      return alert(\"VREME PORUCIVANJA NULL\");\r\n    }\r\n  };\r\n\r\n  const posaljiPorudzbinuNaServer = () => {\r\n    // Prvo kreiramo objekat koji sadrži sve potrebne informacije za porudžbinu\r\n\r\n    console.log(\"Cart items: \" + JSON.stringify(cartItems));\r\n    const newSelectedArtikliIds = [];\r\n    cartItems.forEach((item) => {\r\n      for (let i = 0; i < item.kolicina; i++) {\r\n        newSelectedArtikliIds.push(item.artikal.id);\r\n      }\r\n    });\r\n    setSelectedArtikliIds(newSelectedArtikliIds);\r\n\r\n    console.log(newSelectedArtikliIds);\r\n    console.log(artikli);\r\n\r\n    const zaSlanje = newSelectedArtikliIds.reduce(\r\n      (selectedArtikli, artikalId) => {\r\n        const artikal = artikli.find((artikal) => artikal.id === artikalId);\r\n        if (artikal) {\r\n          selectedArtikli.push(artikal);\r\n        }\r\n        return selectedArtikli;\r\n      },\r\n      []\r\n    );\r\n\r\n    console.log(JSON.stringify(zaSlanje) + \"+++++++++++++++++++++++++++++++\");\r\n\r\n    var token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n    console.log(decodedToken[\"Id\"]);\r\n    if (!token) {\r\n      console.error(\"Token nije prisutan u localStorage-u.\");\r\n      return; // Ovde možete izvršiti odgovarajuće akcije ukoliko token nije prisutan.\r\n    }\r\n\r\n    // Pretpostavićemo da se JWT token sastoji iz tri dela (header, payload, signature) razdvojenih tačkom.\r\n    var tokenParts = token.split(\".\");\r\n    if (tokenParts.length !== 3) {\r\n      console.error(\"Neispravan format tokena.\");\r\n\r\n      return; // Ovde možete izvršiti odgovarajuće akcije ukoliko format nije ispravan.\r\n    }\r\n\r\n    const vremePorucivanja = new Date();\r\n    const vremeIsporuke = formatiranoVremeIsporuke(vremePorucivanja);\r\n\r\n    console.log(\"-----------------VREME PORUCIVANJA: \" + vremePorucivanja);\r\n    console.log(\"-----------------VREME ISPORUKE :\" + vremeIsporuke);\r\n\r\n    if (orderId != null) {\r\n      console.log(\"JESMO LI DOBACILI OVDE?\");\r\n      setIsPaid(true);\r\n      setPayPal(true);\r\n    }\r\n\r\n    const porudzbina = {\r\n      artikli: zaSlanje,\r\n      ukupanIznos: ukupanIznos,\r\n      adresaDostave: adresa,\r\n      komentar: komentar,\r\n      korisnikId: decodedToken[\"Id\"],\r\n      vremePorucivanja: vremePorucivanja,\r\n      vremeIsporuke: vremeIsporuke,\r\n      otkazana: false,\r\n      isPaid: orderId != null ? true : false, // Dodaj isPaid u porudžbinu\r\n      payPal: orderId != null ? true : false, // Dodaj payPal u porudžbinu\r\n      orderId: orderId || \"0\",\r\n    };\r\n\r\n    console.log(JSON.stringify(porudzbina));\r\n\r\n    fetch(\"https://localhost:44388/Porudzbina\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(porudzbina),\r\n      mode: \"cors\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // uspesno poslato serveru\r\n        console.log(\"Sta saljem:\");\r\n        console.log(data);\r\n        alert(\"Porudžbina je uspešno poslata!\");\r\n\r\n        setCartItems([]); // Resetujemo korpu nakon što je porudžbina poslata\r\n        setUkupanIznos(0); // Resetujemo ukupan iznos nakon što je porudžbina poslata\r\n        setAdresa(\"\"); // Resetujemo polje za adresu nakon što je porudžbina poslata\r\n        setKomentar(\"\"); // Resetujemo polje za komentar nakon što je porudžbina poslata\r\n      })\r\n      .catch((error) => {\r\n        //greska prilikom slanja na server\r\n        console.error(\"Greška prilikom slanja porudžbine:\", error);\r\n        alert(\"Došlo je do greške prilikom slanja porudžbine.\");\r\n      });\r\n\r\n    // Zatim koristimo fetch funkciju za slanje POST zahteva na server\r\n    setTimeout(() => {\r\n      fetch(\"https://localhost:44388/Artikal/UpdateKolicinu\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          //Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(zaSlanje),\r\n        mode: \"cors\",\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          // uspesno poslato serveru\r\n          console.log(\"Artikli koje saljem za smanjenje kolicine:\");\r\n\r\n          alert(\"Uspesno je smanjena kolicina artikala.\");\r\n        })\r\n        .catch((error) => {\r\n          //greska prilikom slanja na server\r\n          console.error(\"Greška prilikom smanjenja kolicine:\", error);\r\n        });\r\n    }, 2000);\r\n    //nakon sto sam poslala porudzbinu da smanjim broj artikala\r\n  };\r\n\r\n  const handlePayPalClick = () => {\r\n    setIsPaid(true);\r\n    setPayPal(true);\r\n    console.log(\r\n      \"JEsmo li upali u ovaj gde gde smo postavili sat paid true i setpaypal true.\"\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    var token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n    //console.log(decodedToken[\"Id\"]);\r\n\r\n    fetch(\"https://localhost:44388/Artikal\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      mode: \"cors\",\r\n    })\r\n      .then((responce) => responce.json())\r\n      .then((data) => {\r\n        //obrada odgovora servera\r\n        console.log(data); //ovde dobijem prodavac Id\r\n        setArtikli(data);\r\n      })\r\n      .catch((error) => {\r\n        //obrada greske\r\n        console.error(\r\n          \"Greška prilikom dobavljanja podataka sa servera:\",\r\n          error\r\n        );\r\n      });\r\n\r\n    //fetch sa dobavljanje svih prodavaca(da bi preko idProdavca dobili postarinu)\r\n    fetch(\"https://localhost:44388/Prodavac/allProdavci\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        //Authorization: `Bearer ${token}`,\r\n      },\r\n      mode: \"cors\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"(GET) Svi prodavci:\");\r\n        console.log(data);\r\n        setProdavci(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Greška prilikom dobavljanja prodavaca:\", error);\r\n        alert(\"Došlo je do greške prilikom dobavljanja prodavaca.\");\r\n      });\r\n  }, []); //prazan dependency niz što znači da će se izvršiti samo prilikom prvog renderovanja komponente.\r\n\r\n  useEffect(() => {\r\n    if (cartItems.length === 0) {\r\n      setShowPregledPorudzbine(false);\r\n    } else {\r\n      ukupnaPostarina(cartItems);\r\n    }\r\n  }, [cartItems]);\r\n\r\n  const filteredArtikli = artikli.filter((artikal) => {\r\n    return artikal.naziv.toLowerCase().includes(searchTerm.toLowerCase());\r\n  });\r\n\r\n  const dodajUKorpu = (artikal) => {\r\n    const existingItem = cartItems.find(\r\n      (item) => item.artikal.id === artikal.id\r\n    );\r\n    //console.log(\"*******\" + artikal.id + \"**************\");\r\n    if (existingItem) {\r\n      if (existingItem.kolicina >= artikal.kolicina) {\r\n        alert(\"Dostignuta je maksimalna količina za ovaj artikal.\");\r\n        return;\r\n      }\r\n\r\n      setCartItems(\r\n        cartItems.map((item) =>\r\n          item.artikal.id === artikal.id\r\n            ? { ...item, kolicina: item.kolicina + 1 }\r\n            : item\r\n        )\r\n      );\r\n    } else {\r\n      setCartItems([...cartItems, { artikal, kolicina: 1, cena: 0 }]);\r\n    }\r\n\r\n    setUkupanIznos(ukupanIznos + artikal.cena);\r\n  };\r\n\r\n  const obrisiIzKorpe = (artikal) => {\r\n    const existingItem = cartItems.find(\r\n      (item) => item.artikal.id === artikal.id\r\n    );\r\n    if (existingItem) {\r\n      if (existingItem.kolicina === 1) {\r\n        setCartItems(\r\n          cartItems.filter((item) => item.artikal.id !== artikal.id)\r\n        );\r\n      } else {\r\n        setCartItems(\r\n          cartItems.map((item) =>\r\n            item.artikal.id === artikal.id\r\n              ? { ...item, kolicina: item.kolicina - 1 }\r\n              : item\r\n          )\r\n        );\r\n      }\r\n\r\n      setUkupanIznos(ukupanIznos - artikal.cena);\r\n    }\r\n  };\r\n\r\n  const handlePoruci = () => {\r\n    // Ovde možete implementirati logiku za slanje porudžbine na server, resetovanje korpe, ili nešto drugo što želite\r\n    alert(\"Porudžbina je uspešno poslata!\");\r\n    setIsPaid(false);\r\n    setPayPal(false);\r\n    setCartItems([]);\r\n    setUkupanIznos(0);\r\n  };\r\n\r\n  const sortedArtikli = [...filteredArtikli]; // Kreiramo kopiju niza kako bismo sačuvali originalni niz nepromenjen\r\n\r\n  if (sortOption === \"naziv\") {\r\n    // Sortiranje po nazivu (abecedno)\r\n    sortedArtikli.sort((a, b) => a.naziv.localeCompare(b.naziv));\r\n  } else if (sortOption === \"cena\") {\r\n    // Sortiranje po ceni\r\n    sortedArtikli.sort((a, b) => {\r\n      if (sortOrder === \"asc\") {\r\n        return a.cena - b.cena; // Sortiranje od najjeftinijeg do najskupljeg\r\n      } else {\r\n        return b.cena - a.cena; // Sortiranje od najskupljeg do najjeftinijeg\r\n      }\r\n    });\r\n  }\r\n\r\n  const ukupnaPostarina = (cartItems) => {\r\n    console.log(cartItems);\r\n    //provera ako ima dva artikla od istog Pordavca\r\n    const listaIdjevaProdavaca = [];\r\n\r\n    cartItems.forEach((item) => {\r\n      const idProdavca = item.artikal[\"prodavacID\"];\r\n\r\n      if (!listaIdjevaProdavaca.includes(idProdavca)) {\r\n        listaIdjevaProdavaca.push(idProdavca);\r\n      }\r\n    });\r\n\r\n    let ukupnaPostarina = 0;\r\n\r\n    const filtriraniProdavci = prodavci.filter((prodavac) =>\r\n      listaIdjevaProdavaca.includes(prodavac.id)\r\n    );\r\n\r\n    filtriraniProdavci.forEach((prodavac) => {\r\n      ukupnaPostarina += prodavac.postarina;\r\n    });\r\n\r\n    setTemp(ukupnaPostarina);\r\n  };\r\n\r\n  const [hoveredArtikal, setHoveredArtikal] = useState(null);\r\n\r\n  const product = {\r\n    description: \"nesto\",\r\n    price: 19,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cart-icon\">\r\n        <img src={chartSlika} alt=\"Korpa\" className=\"cart-icon-image\" />\r\n        <span className=\"cart-count\">{korpa}</span>\r\n      </div>\r\n\r\n      <h1 className=\"page-title\">Dostupni artikli</h1>\r\n      <div className=\"search-and-sort\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Unesite naziv artikla za pretragu\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <select\r\n          value={sortOption}\r\n          onChange={(e) => setSortOption(e.target.value)}\r\n        >\r\n          <option value=\"naziv\">Sortiraj po nazivu</option>\r\n          <option value=\"cena\">Sortiraj po ceni</option>\r\n        </select>\r\n        <button\r\n          className=\"sort-order-button\"\r\n          onClick={() => setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\")}\r\n        >\r\n          {sortOrder === \"asc\"\r\n            ? \"Sortiraj po ceni (rastuce)\"\r\n            : \"Sortiraj po ceni (opadajuce)\"}\r\n        </button>\r\n      </div>\r\n\r\n      <table className=\"artikli-table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"table-header\">Naziv</th>\r\n            <th className=\"table-header\">Slika</th>\r\n            <th className=\"table-header\">Količina</th>\r\n            <th className=\"table-header\">Cena</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedArtikli.map((artikal) => (\r\n            <tr\r\n              key={artikal.id}\r\n              className={`artikal-row ${\r\n                hoveredArtikal === artikal.id ? \"hovered\" : \"\"\r\n              }`}\r\n              onMouseEnter={() => setHoveredArtikal(artikal.id)}\r\n              onMouseLeave={() => setHoveredArtikal(null)}\r\n            >\r\n              <td>{artikal.naziv}</td>\r\n              <td>\r\n                <img\r\n                  src={artikal.slikaArtikla}\r\n                  alt={artikal.naziv}\r\n                  className=\"artikal-image\"\r\n                />\r\n              </td>\r\n              <td\r\n                className={`kolicina-cell ${\r\n                  artikal.kolicina > 0 ? \"in-stock\" : \"out-of-stock\"\r\n                }`}\r\n              >\r\n                {artikal.kolicina > 0 ? \"Na stanju\" : \"Nema na stanju\"}\r\n              </td>\r\n              <td>\r\n                {artikal.cena.toLocaleString(\"sr-RS\", {\r\n                  style: \"currency\",\r\n                  currency: \"RSD\",\r\n                })}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"detalji-button\"\r\n                  onClick={() => {\r\n                    setSelectedArtikal(artikal);\r\n                  }}\r\n                >\r\n                  Detalji\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button type=\"button\" onClick={() => dodajUKorpu(artikal)}>\r\n                  Dodaj u korpu\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {selectedArtikal && <DetaljiArtikla artikal={selectedArtikal} />}\r\n      <div className=\"cart-and-order\">\r\n        <Korpa cartItems={cartItems} obrisiIzKorpe={obrisiIzKorpe} />\r\n\r\n        <div className=\"order-summary\">\r\n          {/* ...ostatak JSX koda... */}\r\n          <div className=\"order-summary-section\">\r\n            <h2 className=\"order-summary-title\">Iznos bez troskova dostave:</h2>{\" \"}\r\n            <h2 className=\"order-summary-amount\">\r\n              {ukupanIznos.toLocaleString(\"sr-RS\", {\r\n                style: \"currency\",\r\n                currency: \"RSD\",\r\n              })}\r\n            </h2>\r\n            {cartItems.length > 0 && (\r\n              <button\r\n                className=\"pregled-porudzbine-button\"\r\n                onClick={() => setShowPregledPorudzbine(true)}\r\n              >\r\n                Pregled porudzbine\r\n              </button>\r\n            )}\r\n          </div>\r\n          {showPregledPorudzbine && cartItems.length > 0 && (\r\n            <div className=\"order-details\">\r\n              <h2>Artikli u korpi:</h2>\r\n              <ul className=\"order-details-list\">\r\n                {cartItems.map((item, index) => (\r\n                  <li key={index}>\r\n                    {item.artikal.naziv} (Količina: {item.kolicina})\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"order-details-inputs\">\r\n                <label htmlFor=\"adresa\">Adresa:</label>\r\n                <input\r\n                  id=\"adresa\"\r\n                  value={adresa}\r\n                  onChange={(e) => setAdresa(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"order-details-inputs\">\r\n                <label htmlFor=\"komentar\">Komentar:</label>\r\n                <textarea\r\n                  id=\"komentar\"\r\n                  value={komentar}\r\n                  onChange={(e) => setKomentar(e.target.value)}\r\n                />\r\n                <br />\r\n                <h2 style={{ color: \"#279980\" }}>\r\n                  Ukupan iznos(sa postarinom):\r\n                </h2>\r\n                <h2>\r\n                  {(ukupanIznos + temp).toLocaleString(\"sr-RS\", {\r\n                    style: \"currency\",\r\n                    currency: \"RSD\",\r\n                  })}\r\n                </h2>\r\n              </div>\r\n              <br />\r\n\r\n              <div className=\"paypal-button-container\">\r\n                <PayPalCheckoutButton\r\n                  product={product}\r\n                  setOrderId={setOrderId}\r\n                />\r\n              </div>\r\n\r\n              <br />\r\n\r\n              <br />\r\n\r\n              <button\r\n                className=\"poruci-button\"\r\n                onClick={() => posaljiPorudzbinuNaServer()}\r\n              >\r\n                Poruči\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PregledArtikala;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}