{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irenv\\\\Desktop\\\\Web2-Front\\\\src\\\\components\\\\Mapa.js\",\n  _s = $RefreshSig$();\nimport { Icon } from \"leaflet\";\nimport React, { useState, useEffect } from \"react\";\nimport mapa from \"../mapa.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"../services/MapaService\";\nimport jwtDecode from \"jwt-decode\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mapa = () => {\n  _s();\n  const [porudzbine, setPorudzbine] = useState([]);\n  const [porudzbineDisplay, setPorudzbineDisplay] = useState([]);\n  const [final, setFinal] = useState([]);\n  const markers = [];\n  const customIcon = new Icon({\n    iconUrl: require(\"../images/marker-icon.png\"),\n    iconSize: [38, 38]\n  });\n  function dobaviGeoKoordinate(porudzbine) {\n    var filtriranePorudzbine = porudzbine.map(function (porudzbina) {\n      //prepakovanje\n      return {\n        id: porudzbina.id,\n        adresaDostave: porudzbina.adresaDostave\n      };\n    });\n    console.log(\"JEsmo li stigli do ovde?\");\n    console.log(filtriranePorudzbine);\n    for (const porudzbina of filtriranePorudzbine) {\n      const {\n        id,\n        adresaDostave\n      } = porudzbina;\n      const latLong = getLatLongForAddress(adresaDostave + \", Novi Sad, Srbija\");\n      if (latLong) {\n        porudzbineDisplay.push({\n          id: id,\n          latitude: latLong.latitude,\n          longitude: latLong.longitude\n        });\n      }\n    }\n  }\n  useEffect(() => {\n    var token = localStorage.getItem(\"token\");\n    const decodedToken = jwtDecode(token);\n    fetch(`https://localhost:44388/Porudzbina/allPorudzbineProdavcaNove?korisnikId=${decodedToken[\"Id\"]}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      mode: \"cors\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setPorudzbine(data);\n      dobaviGeoKoordinate(porudzbine);\n    }).catch(error => {\n      console.error(\"Greška prilikom dobavljanja podataka sa servera:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [45.267136, 19.833549],\n    zoom: 13,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), final.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      position: marker.geocode,\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Posalji porudzbinu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, marker.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Mapa, \"MKcg6PbsMcH7Tel2OUg/zSlXGEc=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["Icon","React","useState","useEffect","mapa","jwtDecode","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","Mapa","_s","porudzbine","setPorudzbine","porudzbineDisplay","setPorudzbineDisplay","final","setFinal","markers","customIcon","iconUrl","require","iconSize","dobaviGeoKoordinate","filtriranePorudzbine","map","porudzbina","id","adresaDostave","console","log","latLong","getLatLongForAddress","push","latitude","longitude","token","localStorage","getItem","decodedToken","fetch","method","headers","Authorization","mode","then","response","json","data","catch","error","center","zoom","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","marker","position","geocode","icon","_c","$RefreshReg$"],"sources":["C:/Users/irenv/Desktop/Web2-Front/src/components/Mapa.js"],"sourcesContent":["import { Icon } from \"leaflet\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport mapa from \"../mapa.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../services/MapaService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nconst Mapa = () => {\r\n  const [porudzbine, setPorudzbine] = useState([]);\r\n  const [porudzbineDisplay, setPorudzbineDisplay] = useState([]);\r\n  const [final, setFinal] = useState([]);\r\n  const markers = [];\r\n\r\n  const customIcon = new Icon({\r\n    iconUrl: require(\"../images/marker-icon.png\"),\r\n    iconSize: [38, 38],\r\n  });\r\n\r\n  function dobaviGeoKoordinate(porudzbine){\r\n    var filtriranePorudzbine = porudzbine.map(function(porudzbina) { //prepakovanje\r\n      return {\r\n        id: porudzbina.id,\r\n        adresaDostave: porudzbina.adresaDostave,\r\n      };\r\n    });\r\n\r\n    console.log(\"JEsmo li stigli do ovde?\");\r\n    console.log(filtriranePorudzbine);\r\n\r\n    for (const porudzbina of filtriranePorudzbine) {\r\n      const { id, adresaDostave } = porudzbina;\r\n      const latLong = getLatLongForAddress(adresaDostave + \", Novi Sad, Srbija\");\r\n  \r\n      if (latLong) {\r\n        porudzbineDisplay.push({\r\n          id: id,\r\n          latitude: latLong.latitude,\r\n          longitude: latLong.longitude,\r\n        });\r\n      }\r\n    }\r\n    \r\n}\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    var token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n\r\n    fetch(\r\n      `https://localhost:44388/Porudzbina/allPorudzbineProdavcaNove?korisnikId=${decodedToken[\"Id\"]}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        mode: \"cors\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setPorudzbine(data);\r\n        dobaviGeoKoordinate(porudzbine);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\r\n          \"Greška prilikom dobavljanja podataka sa servera:\",\r\n          error\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <MapContainer center={[45.267136, 19.833549]} zoom={13}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      {final.map((marker) => (\r\n        <Marker key={marker.id} position={marker.geocode} icon={customIcon}>\r\n          <Popup>\r\n            <p></p>\r\n            <button>\r\n              Posalji porudzbinu\r\n            </button>\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Mapa;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}