{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irenv\\\\Desktop\\\\Web2-Front\\\\src\\\\components\\\\Mapa.js\";\nimport { Icon } from \"leaflet\";\nimport mapa from \"../mapa.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mapa = () => {\n  const markers = [{\n    geocode: [45.238911, 19.842487]\n  }, {\n    geocode: [45.235800, 19.847482]\n  }, {\n    geocode: [45.253375, 19.860579]\n  }];\n  const customIcon = new Icon({\n    iconUrl: require(\"../images/marker-icon.png\"),\n    iconSize: [38, 38]\n  });\n  function dobaviGeoKoordinate() {\n    let koordinate;\n    const address = \"Aleksa Santic 8\";\n    const nominatimUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;\n    fetch(nominatimUrl).then(response => response.json()).then(data => {\n      if (data && data.length > 0) {\n        const firstResult = data[0];\n        koordinate = [{\n          latitude: parseFloat(firstResult.lat),\n          longitude: parseFloat(firstResult.lon)\n        }];\n        console.log(`Latitude: ${parseFloat(firstResult.lat)}, Longitude: ${parseFloat(firstResult.lon)}`);\n      } else {\n        console.error(\"Adresa nije pronađena.\");\n      }\n    }).catch(error => {\n      console.error(\"Greška prilikom dohvatanja podataka:\", error);\n    });\n    return koordinate;\n  }\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [45.267136, 19.833549],\n    zoom: 13,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      position: marker.geocode,\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Posalji porudzbinu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["Icon","mapa","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","Mapa","markers","geocode","customIcon","iconUrl","require","iconSize","dobaviGeoKoordinate","koordinate","address","nominatimUrl","encodeURIComponent","fetch","then","response","json","data","length","firstResult","latitude","parseFloat","lat","longitude","lon","console","log","error","catch","center","zoom","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","map","marker","position","icon","_c","$RefreshReg$"],"sources":["C:/Users/irenv/Desktop/Web2-Front/src/components/Mapa.js"],"sourcesContent":["import { Icon } from \"leaflet\";\r\nimport mapa from \"../mapa.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\n\r\n\r\nconst Mapa = () => {\r\n\r\n    const markers = [\r\n        {\r\n          geocode: [45.238911, 19.842487]\r\n        },\r\n        {\r\n          geocode: [45.235800, 19.847482]\r\n        },\r\n        {\r\n          geocode: [45.253375, 19.860579]\r\n        }\r\n      ];\r\n    const customIcon=new Icon({\r\n      iconUrl: require(\"../images/marker-icon.png\"),\r\n      iconSize: [38,38]\r\n    });\r\n\r\n    function dobaviGeoKoordinate(){\r\n      let koordinate;\r\n      const address=\"Aleksa Santic 8\";\r\n      const nominatimUrl=`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;\r\n      \r\n      fetch(nominatimUrl)\r\n        .then((response)=>response.json())\r\n        .then((data)=>{\r\n          if (data && data.length > 0) {\r\n            const firstResult = data[0];\r\n\r\n             koordinate=[\r\n              {\r\n                latitude: parseFloat(firstResult.lat),\r\n                longitude: parseFloat(firstResult.lon)\r\n              }\r\n            ];\r\n\r\n            console.log(`Latitude: ${parseFloat(firstResult.lat)}, Longitude: ${parseFloat(firstResult.lon)}`);\r\n          } else {\r\n            console.error(\"Adresa nije pronađena.\");\r\n          }\r\n        })\r\n        .catch((error)=>{\r\n          console.error(\"Greška prilikom dohvatanja podataka:\", error);\r\n        });\r\n        \r\n        return koordinate;\r\n    }\r\n    \r\n  return (\r\n    <MapContainer center={[45.267136, 19.833549]} zoom={13}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      {\r\n        markers.map(marker=>(\r\n            <Marker position={marker.geocode} icon={customIcon}>\r\n            <Popup>\r\n            <p></p>\r\n            <button>Posalji porudzbinu</button>\r\n            </Popup>\r\n          </Marker>\r\n        ))\r\n      }\r\n\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Mapa;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}