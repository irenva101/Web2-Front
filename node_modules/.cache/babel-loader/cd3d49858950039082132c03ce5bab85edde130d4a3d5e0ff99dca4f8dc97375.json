{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irenv\\\\Desktop\\\\Web2-Front\\\\src\\\\components\\\\PaypalCheckoutButton.js\",\n  _s = $RefreshSig$();\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayPalCheckoutButton = () => {\n  _s();\n  const [paidFor, setPaidFor] = useState(false);\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n  //const { product } = props;\n  const handleApprove = orderId => {\n    //pucam na pek imam orderId\n    //if response==true\n    setPaidFor(true);\n    //if response is error\n  };\n\n  if (paidFor) {\n    //direct uset to success page\n    //alert(\"Thank you for your purchase!\");\n    navigate(\"/ulogovan-korisnik/prethodne-porudzbine\");\n  }\n  if (error) {\n    // Display error message, modal or redirect user to error page\n    alert(error);\n  }\n  return /*#__PURE__*/_jsxDEV(PayPalButtons, {\n    style: {\n      color: \"silver\",\n      layout: \"horizontal\",\n      height: 48,\n      tagline: false,\n      shape: \"pill\"\n    },\n    createOrder: (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          description: \"test\",\n          amount: {\n            value: 0\n          }\n        }]\n      });\n    },\n    onClick: (data, actions) => {\n      // Validate on button click, client or server side\n      const hasAlreadyBoughtCourse = false;\n      if (hasAlreadyBoughtCourse) {\n        setError(\"You already bought this course. Go to your account to view your list of courses.\");\n        return actions.reject();\n      } else {\n        return actions.resolve();\n      }\n    },\n    onApprove: async (data, actions) => {\n      const order = await actions.order.capture();\n      console.log(\"order\", order);\n      handleApprove(data.orderID);\n    },\n    onError: err => {\n      setError(err);\n      console.error(\"PayPal Checkout onError\", err);\n    },\n    onCancel: () => {\n      // Display cancel message, modal or redirect user to cancel page or back to cart\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PayPalCheckoutButton, \"bOnjGMHjZWuUXItsU0ZFJS17EIk=\", false, function () {\n  return [useNavigate];\n});\n_c = PayPalCheckoutButton;\nexport default PayPalCheckoutButton;\nvar _c;\n$RefreshReg$(_c, \"PayPalCheckoutButton\");","map":{"version":3,"names":["PayPalButtons","useNavigate","useState","act","jsxDEV","_jsxDEV","PayPalCheckoutButton","_s","paidFor","setPaidFor","navigate","error","setError","handleApprove","orderId","alert","style","color","layout","height","tagline","shape","createOrder","data","actions","order","create","purchase_units","description","amount","value","onClick","hasAlreadyBoughtCourse","reject","resolve","onApprove","capture","console","log","orderID","onError","err","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/irenv/Desktop/Web2-Front/src/components/PaypalCheckoutButton.js"],"sourcesContent":["import { PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { act } from \"react-dom/test-utils\";\r\nconst PayPalCheckoutButton = () => {\r\n  const [paidFor, setPaidFor] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(null);\r\n  //const { product } = props;\r\n  const handleApprove = (orderId) => {\r\n    //pucam na pek imam orderId\r\n    //if response==true\r\n    setPaidFor(true);\r\n    //if response is error\r\n  };\r\n\r\n  if (paidFor) {\r\n    //direct uset to success page\r\n    //alert(\"Thank you for your purchase!\");\r\n    navigate(\"/ulogovan-korisnik/prethodne-porudzbine\");\r\n  }\r\n  if (error) {\r\n    // Display error message, modal or redirect user to error page\r\n    alert(error);\r\n  }\r\n\r\n  return (\r\n    <PayPalButtons\r\n      style={{\r\n        color: \"silver\",\r\n        layout: \"horizontal\",\r\n        height: 48,\r\n        tagline: false,\r\n        shape: \"pill\",\r\n      }}\r\n      createOrder={(data, actions) => {\r\n        return actions.order.create({\r\n          purchase_units: [\r\n            {\r\n              description: \"test\",\r\n              amount: {\r\n                value: 0,\r\n              },\r\n            },\r\n          ],\r\n        });\r\n      }}\r\n      onClick={(data, actions) => {\r\n        // Validate on button click, client or server side\r\n        const hasAlreadyBoughtCourse = false;\r\n      \r\n        if (hasAlreadyBoughtCourse) {\r\n          setError(\r\n            \"You already bought this course. Go to your account to view your list of courses.\"\r\n          );\r\n      \r\n          return actions.reject();\r\n        } else {\r\n          return actions.resolve();\r\n        }\r\n      }}\r\n      onApprove={async (data, actions) => {\r\n        const order = await actions.order.capture();\r\n        console.log(\"order\", order);\r\n        handleApprove(data.orderID);\r\n      }}\r\n      onError={(err) => {\r\n        setError(err);\r\n        console.error(\"PayPal Checkout onError\", err);\r\n      }}\r\n      onCancel={() => {\r\n        // Display cancel message, modal or redirect user to cancel page or back to cart\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PayPalCheckoutButton;\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,GAAG,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC;EACA,MAAMW,aAAa,GAAIC,OAAO,IAAK;IACjC;IACA;IACAL,UAAU,CAAC,IAAI,CAAC;IAChB;EACF,CAAC;;EAED,IAAID,OAAO,EAAE;IACX;IACA;IACAE,QAAQ,CAAC,yCAAyC,CAAC;EACrD;EACA,IAAIC,KAAK,EAAE;IACT;IACAI,KAAK,CAACJ,KAAK,CAAC;EACd;EAEA,oBACEN,OAAA,CAACL,aAAa;IACZgB,KAAK,EAAE;MACLC,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE,YAAY;MACpBC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT,CAAE;IACFC,WAAW,EAAEA,CAACC,IAAI,EAAEC,OAAO,KAAK;MAC9B,OAAOA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;QAC1BC,cAAc,EAAE,CACd;UACEC,WAAW,EAAE,MAAM;UACnBC,MAAM,EAAE;YACNC,KAAK,EAAE;UACT;QACF,CAAC;MAEL,CAAC,CAAC;IACJ,CAAE;IACFC,OAAO,EAAEA,CAACR,IAAI,EAAEC,OAAO,KAAK;MAC1B;MACA,MAAMQ,sBAAsB,GAAG,KAAK;MAEpC,IAAIA,sBAAsB,EAAE;QAC1BpB,QAAQ,CACN,kFACF,CAAC;QAED,OAAOY,OAAO,CAACS,MAAM,CAAC,CAAC;MACzB,CAAC,MAAM;QACL,OAAOT,OAAO,CAACU,OAAO,CAAC,CAAC;MAC1B;IACF,CAAE;IACFC,SAAS,EAAE,MAAAA,CAAOZ,IAAI,EAAEC,OAAO,KAAK;MAClC,MAAMC,KAAK,GAAG,MAAMD,OAAO,CAACC,KAAK,CAACW,OAAO,CAAC,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEb,KAAK,CAAC;MAC3BZ,aAAa,CAACU,IAAI,CAACgB,OAAO,CAAC;IAC7B,CAAE;IACFC,OAAO,EAAGC,GAAG,IAAK;MAChB7B,QAAQ,CAAC6B,GAAG,CAAC;MACbJ,OAAO,CAAC1B,KAAK,CAAC,yBAAyB,EAAE8B,GAAG,CAAC;IAC/C,CAAE;IACFC,QAAQ,EAAEA,CAAA,KAAM;MACd;IAAA;EACA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACvC,EAAA,CAvEID,oBAAoB;EAAA,QAEPL,WAAW;AAAA;AAAA8C,EAAA,GAFxBzC,oBAAoB;AAyE1B,eAAeA,oBAAoB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}