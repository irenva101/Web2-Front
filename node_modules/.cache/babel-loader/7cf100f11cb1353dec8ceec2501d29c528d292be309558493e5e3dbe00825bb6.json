{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irenv\\\\Desktop\\\\Web2-Front\\\\src\\\\components\\\\Mapa.js\",\n  _s2 = $RefreshSig$();\nimport { Icon } from \"leaflet\";\nimport React, { useState, useEffect } from \"react\";\nimport mapa from \"../mapa.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"../services/MapaService\";\nimport jwtDecode from \"jwt-decode\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mapa = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [porudzbine, setPorudzbine] = useState([]);\n  const [porudzbineDisplay, setPorudzbineDisplay] = useState([]);\n  const [final, setFinal] = useState([]);\n  const markers = [];\n  const customIcon = new Icon({\n    iconUrl: require(\"../images/marker-icon.png\"),\n    iconSize: [38, 38]\n  });\n  function getLatLongForAddress(address) {\n    //Danila Kiša 36, Novi Sad, Srbija\n    const nominatimUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;\n    return fetch(nominatimUrl).then(response => response.json()).then(data => {\n      if (data && data.length > 0) {\n        //console.log(data);\n        const firstResult = data[0];\n        const latitude = parseFloat(firstResult.lat);\n        const longitude = parseFloat(firstResult.lon);\n\n        //console.log(\"Latitude: \"+latitude +\", Longitude: \"+longitude);\n\n        return {\n          latitude,\n          longitude\n        };\n      } else {\n        console.error(\"Adresa nije pronađena.\");\n        return null;\n      }\n    }).catch(error => {\n      console.error(\"Greška prilikom dohvatanja podataka:\", error);\n      return null;\n    });\n  }\n  function dobaviGeoKoordinate(porudzbine) {\n    var filtriranePorudzbine = porudzbine.map(function (porudzbina) {\n      return {\n        id: porudzbina.id,\n        adresaDostave: porudzbina.adresaDostave\n      };\n    });\n\n    //console.log(\"Filtrirane porudzbine: \"+ JSON.stringify(filtriranePorudzbine));\n\n    const porudzbineDisplay1 = [];\n    Promise.all(filtriranePorudzbine.map(async porudzbina => {\n      const {\n        id,\n        adresaDostave\n      } = porudzbina;\n      const latLong = await getLatLongForAddress(adresaDostave + \", Novi Sad, Srbija\");\n      if (latLong) {\n        porudzbineDisplay1.push({\n          id: id,\n          latitude: latLong.latitude,\n          longitude: latLong.longitude\n        });\n      }\n    })).then(() => {\n      console.log(\"Porudžbine sa dodatnim informacijama:\", JSON.stringify(porudzbineDisplay));\n      setPorudzbineDisplay(porudzbineDisplay1);\n    });\n  }\n  _s(useEffect(_s(() => {\n    _s();\n    var token = localStorage.getItem(\"token\");\n    const decodedToken = jwtDecode(token);\n    fetch(`https://localhost:44388/Porudzbina/allPorudzbineProdavcaNove?korisnikId=${decodedToken[\"Id\"]}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      mode: \"cors\"\n    }).then(response => response.json()).then(data => {\n      //console.log(data);\n      setPorudzbine(data);\n    }).catch(error => {\n      console.error(\"Greška prilikom dobavljanja podataka sa servera:\", error);\n    });\n    useEffect(() => {\n      // Pozivamo dobaviGeoKoordinate kada se porudzbineDisplay ažurira\n      dobaviGeoKoordinate(porudzbine).then(porudzbineDisplay1 => {\n        setPorudzbineDisplay(porudzbineDisplay1);\n        var temp = porudzbineDisplay1.map(function (porudzbina) {\n          return {\n            id: porudzbina.id,\n            geocode: [porudzbina.latitude, porudzbina.longitude]\n          };\n        });\n        setFinal(temp);\n        console.log(\"FINALLLLLLLLLLLLLLLLLLLLLLL: \" + JSON.stringify(final));\n      });\n    }, [porudzbine]);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), []), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [45.267136, 19.833549],\n    zoom: 13,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), final.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      position: marker.geocode,\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Posalji porudzbinu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, marker.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s2(Mapa, \"MKcg6PbsMcH7Tel2OUg/zSlXGEc=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["Icon","React","useState","useEffect","mapa","jwtDecode","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","Mapa","_s2","_s","$RefreshSig$","porudzbine","setPorudzbine","porudzbineDisplay","setPorudzbineDisplay","final","setFinal","markers","customIcon","iconUrl","require","iconSize","getLatLongForAddress","address","nominatimUrl","encodeURIComponent","fetch","then","response","json","data","length","firstResult","latitude","parseFloat","lat","longitude","lon","console","error","catch","dobaviGeoKoordinate","filtriranePorudzbine","map","porudzbina","id","adresaDostave","porudzbineDisplay1","Promise","all","latLong","push","log","JSON","stringify","token","localStorage","getItem","decodedToken","method","headers","Authorization","mode","temp","geocode","center","zoom","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","marker","position","icon","_c","$RefreshReg$"],"sources":["C:/Users/irenv/Desktop/Web2-Front/src/components/Mapa.js"],"sourcesContent":["import { Icon } from \"leaflet\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport mapa from \"../mapa.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../services/MapaService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nconst Mapa = () => {\r\n  const [porudzbine, setPorudzbine] = useState([]);\r\n  const [porudzbineDisplay, setPorudzbineDisplay]=useState([]);\r\n  const [final, setFinal]=useState([]);\r\n  const markers = [];\r\n  const customIcon = new Icon({\r\n    iconUrl: require(\"../images/marker-icon.png\"),\r\n    iconSize: [38, 38],\r\n  });\r\n\r\n  function getLatLongForAddress(address) { //Danila Kiša 36, Novi Sad, Srbija\r\n    const nominatimUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\r\n      address\r\n    )}`;\r\n\r\n    return fetch(nominatimUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data && data.length > 0) {\r\n          //console.log(data);\r\n          const firstResult = data[0];\r\n          const latitude = parseFloat(firstResult.lat);\r\n          const longitude = parseFloat(firstResult.lon);\r\n\r\n          //console.log(\"Latitude: \"+latitude +\", Longitude: \"+longitude);\r\n\r\n          return { latitude, longitude };\r\n        } else {\r\n          console.error(\"Adresa nije pronađena.\");\r\n          return null;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Greška prilikom dohvatanja podataka:\", error);\r\n        return null;\r\n      });\r\n  }\r\n\r\n  function dobaviGeoKoordinate(porudzbine) {\r\n    var filtriranePorudzbine = porudzbine.map(function(porudzbina) {\r\n      return {\r\n        id: porudzbina.id,\r\n        adresaDostave: porudzbina.adresaDostave,\r\n      };\r\n    });\r\n\r\n    //console.log(\"Filtrirane porudzbine: \"+ JSON.stringify(filtriranePorudzbine));\r\n\r\n    const porudzbineDisplay1 = [];\r\n\r\n    Promise.all(\r\n      filtriranePorudzbine.map(async (porudzbina) => {\r\n        const { id, adresaDostave } = porudzbina;\r\n        const latLong = await getLatLongForAddress(adresaDostave + \", Novi Sad, Srbija\");\r\n\r\n        if (latLong) {\r\n          porudzbineDisplay1.push({\r\n            id: id,\r\n            latitude: latLong.latitude,\r\n            longitude: latLong.longitude,\r\n          });\r\n        }\r\n      })\r\n    ).then(() => {\r\n      console.log(\"Porudžbine sa dodatnim informacijama:\", JSON.stringify(porudzbineDisplay));\r\n      setPorudzbineDisplay(porudzbineDisplay1);\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    var token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n\r\n    fetch(\r\n      `https://localhost:44388/Porudzbina/allPorudzbineProdavcaNove?korisnikId=${decodedToken[\"Id\"]}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        mode: \"cors\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        setPorudzbine(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\r\n          \"Greška prilikom dobavljanja podataka sa servera:\",\r\n          error\r\n        );\r\n      });\r\n\r\n      useEffect(() => {\r\n        // Pozivamo dobaviGeoKoordinate kada se porudzbineDisplay ažurira\r\n        dobaviGeoKoordinate(porudzbine).then((porudzbineDisplay1) => {\r\n          setPorudzbineDisplay(porudzbineDisplay1);\r\n    \r\n          var temp = porudzbineDisplay1.map(function (porudzbina) {\r\n            return {\r\n              id: porudzbina.id,\r\n              geocode: [porudzbina.latitude, porudzbina.longitude],\r\n            };\r\n          });\r\n          setFinal(temp);\r\n          console.log(\"FINALLLLLLLLLLLLLLLLLLLLLLL: \"+ JSON.stringify(final));\r\n        });\r\n      }, [porudzbine]);\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer center={[45.267136, 19.833549]} zoom={13}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      {final.map((marker) => (\r\n        <Marker key={marker.id} position={marker.geocode} icon={customIcon}>\r\n          <Popup>\r\n            <p></p>\r\n            <button>Posalji porudzbinu</button>\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Mapa;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}